// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v2/helloworld.proto

/*
Package helloworld is a generated protocol buffer package.

It is generated from these files:
	proto/v2/helloworld.proto

It has these top-level messages:
	HelloRequest
	HelloReply
*/
package helloworld

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the message & description
type HelloReply struct {
	// Types that are valid to be assigned to Response:
	//	*HelloReply_Message
	//	*HelloReply_Description
	Response isHelloReply_Response `protobuf_oneof:"response"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isHelloReply_Response interface {
	isHelloReply_Response()
}

type HelloReply_Message struct {
	Message string `protobuf:"bytes,1,opt,name=message,oneof"`
}
type HelloReply_Description struct {
	Description string `protobuf:"bytes,2,opt,name=description,oneof"`
}

func (*HelloReply_Message) isHelloReply_Response()     {}
func (*HelloReply_Description) isHelloReply_Response() {}

func (m *HelloReply) GetResponse() isHelloReply_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *HelloReply) GetMessage() string {
	if x, ok := m.GetResponse().(*HelloReply_Message); ok {
		return x.Message
	}
	return ""
}

func (m *HelloReply) GetDescription() string {
	if x, ok := m.GetResponse().(*HelloReply_Description); ok {
		return x.Description
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HelloReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HelloReply_OneofMarshaler, _HelloReply_OneofUnmarshaler, _HelloReply_OneofSizer, []interface{}{
		(*HelloReply_Message)(nil),
		(*HelloReply_Description)(nil),
	}
}

func _HelloReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HelloReply)
	// response
	switch x := m.Response.(type) {
	case *HelloReply_Message:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Message)
	case *HelloReply_Description:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Description)
	case nil:
	default:
		return fmt.Errorf("HelloReply.Response has unexpected type %T", x)
	}
	return nil
}

func _HelloReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HelloReply)
	switch tag {
	case 1: // response.message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Response = &HelloReply_Message{x}
		return true, err
	case 2: // response.description
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Response = &HelloReply_Description{x}
		return true, err
	default:
		return false, nil
	}
}

func _HelloReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HelloReply)
	// response
	switch x := m.Response.(type) {
	case *HelloReply_Message:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Message)))
		n += len(x.Message)
	case *HelloReply_Description:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Description)))
		n += len(x.Description)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Greeter_serviceDesc.Streams[0], c.cc, "/Greeter/SayHello", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayHelloClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayHelloClient interface {
	Recv() (*HelloReply, error)
	grpc.ClientStream
}

type greeterSayHelloClient struct {
	grpc.ClientStream
}

func (x *greeterSayHelloClient) Recv() (*HelloReply, error) {
	m := new(HelloReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	SayHello(*HelloRequest, Greeter_SayHelloServer) error
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayHello(m, &greeterSayHelloServer{stream})
}

type Greeter_SayHelloServer interface {
	Send(*HelloReply) error
	grpc.ServerStream
}

type greeterSayHelloServer struct {
	grpc.ServerStream
}

func (x *greeterSayHelloServer) Send(m *HelloReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayHello",
			Handler:       _Greeter_SayHello_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/v2/helloworld.proto",
}

func init() { proto.RegisterFile("proto/v2/helloworld.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x33, 0xd2, 0xcf, 0x48, 0xcd, 0xc9, 0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1,
	0x03, 0x8b, 0x29, 0x29, 0x71, 0xf1, 0x78, 0x80, 0xc4, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0,
	0x6c, 0xa5, 0x08, 0x2e, 0x2e, 0xa8, 0x9a, 0x82, 0x9c, 0x4a, 0x21, 0x29, 0x2e, 0xf6, 0xdc, 0xd4,
	0xe2, 0xe2, 0xc4, 0x74, 0xa8, 0x22, 0x0f, 0x86, 0x20, 0x98, 0x80, 0x90, 0x12, 0x17, 0x77, 0x4a,
	0x6a, 0x71, 0x72, 0x51, 0x66, 0x41, 0x49, 0x66, 0x7e, 0x9e, 0x04, 0x13, 0x54, 0x1e, 0x59, 0xd0,
	0x89, 0x8b, 0x8b, 0xa3, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0xd5, 0xc8, 0x94, 0x8b, 0xdd,
	0xbd, 0x28, 0x35, 0xb5, 0x24, 0xb5, 0x48, 0x48, 0x8b, 0x8b, 0x23, 0x38, 0xb1, 0x12, 0x6c, 0x8f,
	0x10, 0xaf, 0x1e, 0xb2, 0x9b, 0xa4, 0xb8, 0xf5, 0x10, 0xd6, 0x2b, 0x31, 0x18, 0x30, 0x26, 0xb1,
	0x81, 0xdd, 0x6e, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xef, 0xac, 0xbd, 0x94, 0xd8, 0x00, 0x00,
	0x00,
}
